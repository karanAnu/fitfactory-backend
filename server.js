import express from "express";
import mongoose from "mongoose";
import cors from "cors";
import dotenv from "dotenv";

// ‚úÖ Load env variables
dotenv.config();

const app = express();
const PORT = process.env.PORT || 5000;

// ‚úÖ CORS setup (fixed for Vercel)
const corsOptions = {
  origin: [
    "https://fitfactory-frontend.vercel.app",  // ‚úÖ Vercel - User Website
    "https://fitfactory-admin.vercel.app",     // ‚úÖ Vercel - Admin Panel
    "http://localhost:5173",                   // ‚úÖ Local dev
  ],
  credentials: true,
};
app.use(cors(corsOptions));

// ‚úÖ Middleware
app.use(express.json()); // ‚úÖ Parse JSON

// ‚úÖ Route Imports
import contactRoutes from "./routes/contactRoute.js";
import authRoutes from "./routes/authRoutes.js";
import userRoutes from "./routes/userRoutes.js"; // üÜï User/subscription routes

// ‚úÖ API Routes
app.use("/api/contact", contactRoutes);
app.use("/api/auth", authRoutes);       // üîê Auth (signup/login/otp)
app.use("/api/users", userRoutes);      // üë§ User routes (subscription, profile etc.)

// ‚úÖ Test Route
app.get("/", (req, res) => {
  res.send("‚úÖ FitFactory backend is live!");
});

// ‚úÖ MongoDB + Start Server
mongoose
  .connect(process.env.MONGO_URI)
  .then(() => {
    console.log("‚úÖ MongoDB connected successfully");
    app.listen(PORT, () =>
      console.log(`üöÄ Server running at http://localhost:${PORT}`)
    );
  })
  .catch((err) => {
    console.error("‚ùå MongoDB connection error:", err.message);
    process.exit(1); // Exit process on failure
  });